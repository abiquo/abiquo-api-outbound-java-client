/**
 * The Abiquo Platform
 * Cloud management application for hybrid clouds
 * Copyright (C) 2008 - Abiquo Holdings S.L.
 *
 * This application is free software; you can redistribute it and/or
 * modify it under the terms of the GNU LESSER GENERAL PUBLIC
 * LICENSE as published by the Free Software Foundation under
 * version 3 of the License
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * LESSER GENERAL PUBLIC LICENSE v.3 for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
package com.abiquo.bond.plugins;

import com.abiquo.bond.api.annotations.HandleAnyEvent;
import com.abiquo.bond.api.event.APIEvent;
import com.abiquo.bond.api.plugin.AbstractPlugin;
import com.abiquo.bond.api.plugin.PluginException;

/**
 * A simple plugin example that receives all events generated by the Outbound API and just outputs
 * the specific class name of the APIEvent instance.
 */
public class AllEvents extends AbstractPlugin
{
    public AllEvents() throws Exception
    {
    }

    @HandleAnyEvent
    public void handleAnyEvent(final APIEvent event)
    {
        System.out.println("AllEvents: Received event of type " + event.getClass().getName());
    }

    @Override
    public String getName()
    {
        return "AllEvents sample plugin";
    }

    @Override
    public String getThreadName()
    {
        return "ABQ_PLUGIN_ALL_EVENTS";
    }

    @Override
    public void startup() throws PluginException
    {
        System.out.println("AllEvents:startup has been called");
    }

    /*
     * Simple example configuration that simple prints a message
     */
    public void configure()
    {
        System.out.println("AllEvents:configure has been called");
    }
}
